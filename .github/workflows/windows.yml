name: Windows CI

on:
  push:
    branches: [ windows-git ]
  pull_request:
    branches: [ windows-git ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test on Windows
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install system dependencies
      run: |
        # Install any required system dependencies for Windows
        choco install llvm -y
        
    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --workspace --verbose

    - name: Build kanari binary
      run: cargo build --release --bin kanari

    - name: Test kanari binary
      run: |
        ./target/release/kanari.exe --version
        ./target/release/kanari.exe --help

    - name: Upload kanari.exe artifact
      uses: actions/upload-artifact@v4
      with:
        name: kanari-windows-x64
        path: target/release/kanari.exe
        retention-days: 30

  release:
    name: Create Release
    needs: test
    runs-on: windows-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary
      run: cargo build --release --bin kanari

    - name: Create release archive
      run: |
        $version = "${{ github.ref_name }}"
        $archive_name = "kanari-$version-windows-x64.zip"
        Compress-Archive -Path target/release/kanari.exe -DestinationPath $archive_name
        echo "ARCHIVE_NAME=$archive_name" >> $env:GITHUB_ENV

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.ARCHIVE_NAME }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
